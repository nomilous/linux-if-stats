// Generated by CoffeeScript 1.6.3
var EOL, fs, local;

fs = require('fs');

EOL = require('os').EOL;

/*

local
-----

* this module's privates
* accessable for testing via `.test()`
* obviously therefore also eccessable in general (if used, expect no consistancy between versions)

`local.reading`  - contains the latest reading from /proc/net/dev
`local.interval` - the interval of reading taking
`local.timer`    - the running timer loop reference
`local.poke`     - a purposeless additional comment referring, in jest at my excessive annotations, to a non existant property
`remote.fondle`  - not yet implemented on facebook, but just you wait...
*/


local = {
  reading: {},
  interval: 1000,
  timer: void 0,
  current: function() {
    return local.reading;
  },
  poll: function() {
    var data;
    data = fs.readFileSync('/proc/net/dev');
    return data.split(EOL).slice(2).map(function(line) {
      var iface, ignore, keys, readings, _base, _ref;
      _ref = line.match(/\s*(.*)\:(.*)/), ignore = _ref[0], iface = _ref[1], readings = _ref[2];
      (_base = local.reading)[iface] || (_base[iface] = {});
      keys = ['ignore', 'rxBytes', 'rxPackets', 'rxErrs', 'rxDrop', 'xrFifo', 'rxFrame', 'rxCompressed', 'rxMulticast', 'txBytes', 'txPackets', 'txErrs', 'txDrop', 'txFifo', 'txColls', 'txCarrier', 'txCompressed'];
      return readings.match(/\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)\s*(\d*)/).map(function(value) {
        var key;
        key = keys.shift();
        if (key === 'ignore') {
          return;
        }
        return local.reading[iface][key] = parseInt(value);
      });
    });
  },
  /*
  
  `start()` - Starts the poller
  -----------------------------
  */

  start: function() {
    return local.timer = setInterval(local.poll, local.interval);
  }
};

/*

web exports
-----------

* these functions become availiable over http if this component is grafted 
  onto a running [vertex](https://github.com/nomilous/vertex) routes tree
*/


local.current.$www = {};

/*

module / component exports
--------------------------
*/


module.exports = {
  current: local.current,
  start: local.start
};

module.exports.test = function() {
  return local;
};
